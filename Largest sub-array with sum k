public class Solution {
    public int lenOfLongSubarr(int[] arr, int n, int k) {
        //Complete the function
        int maxLength = 0;
        int currentSum = 0;
        HashMap<Integer, Integer> sumMap = new HashMap<>();
        
        for (int i = 0; i < arr.length; i++) {
            currentSum += arr[i];
            
            if (currentSum == k) {
                maxLength = Math.max(maxLength, i + 1);
            }
            
            if (sumMap.containsKey(currentSum - k)) {
                maxLength = Math.max(maxLength, i - sumMap.get(currentSum - k));
            }
            
            if (!sumMap.containsKey(currentSum)) {
                sumMap.put(currentSum, i);
            }
        }
        
        return maxLength;
    }
}
